version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: anime-postgres
    environment:
      POSTGRES_DB: anime_saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - anime-network

  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    container_name: anime-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - anime-network

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: anime-backend
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/anime_saas
      - REDIS_URL=redis://redis:6379
      - AI_SERVICE_URL=http://ai-service:8000
      - NODE_ENV=production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - anime-network

  # AI Model Service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: anime-ai-service
    ports:
      - "8000:8000"
    environment:
      - MODEL_CACHE_DIR=/app/models
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    volumes:
      - ./models:/app/models
      - ./uploads:/app/uploads
    networks:
      - anime-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: anime-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_WS_URL=ws://localhost:3001
    depends_on:
      - backend
    networks:
      - anime-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: anime-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - anime-network

volumes:
  postgres_data:
  redis_data:

networks:
  anime-network:
    driver: bridge